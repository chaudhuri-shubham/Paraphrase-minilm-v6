Subject: Caf√© r√©sum√© meeting ‚òï
Body:

Hola Shubham,

Let's meet at the caf√© near the station tomorrow.
¬øPodr√≠as traer el r√©sum√© y los documentos de Mar√≠a L√≥pez, por favor?
Also, confirm for Se√±or Garc√≠a.

Thanks üòä


# demo_shiftjis_error.py
# This reproduces the exact same 'shift_jis' UnicodeDecodeError

# Make text containing accented characters that produce 0xF3 etc. in Latin-1
latin_text = "Se√±or L√≥pez met at the caf√©. C√≥mo est√°s?"

# Encode it as Latin-1 bytes (produces 0xF3 for '√≥', 0xF1 for '√±')
latin_bytes = latin_text.encode("latin-1")

# Try decoding those bytes as Shift_JIS (what extract_msg might do incorrectly)
decoded = latin_bytes.decode("shift_jis")


# fake_msg_error.py

latin_text = "Hola Se√±or, c√≥mo est√°s en el caf√©?"
data = latin_text.encode("latin-1")  # contains 0xF3

with open("broken.msg", "wb") as f:
    f.write(data)



with open("broken.msg", "rb") as f:
    raw = f.read()

raw.decode("shift_jis")  # ‚ùå Raises the same UnicodeDecodeError


import extract_msg

# Create a dummy .msg file (not a real Outlook one)
with open("broken.msg", "wb") as f:
    f.write("Se√±or L√≥pez en el caf√©".encode("latin-1"))

# Patch extract_msg to force Shift_JIS decode
msg = extract_msg.Message("broken.msg")

try:
    # Emulate what happens when wrong codec is used
    raw = msg._getStringStream("__substg1.0_1000")
    text = raw.decode("shift_jis")  # this line forces the same error
except UnicodeDecodeError as e:
    print("üí• Got expected error:", e)